// Code generated by generate_zip.pl; DO NOT EDIT.

package optional

import (
	"github.com/shogo82148/hi/tuple"
)

// Unzip2 converts an optional of 2-tuple to optionals of each elements.
func Unzip2[T1, T2 any](o Optional[tuple.Tuple2[T1, T2]]) (Optional[T1], Optional[T2]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}
}

// Unzip3 converts an optional of 3-tuple to optionals of each elements.
func Unzip3[T1, T2, T3 any](o Optional[tuple.Tuple3[T1, T2, T3]]) (Optional[T1], Optional[T2], Optional[T3]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}
}

// Unzip4 converts an optional of 4-tuple to optionals of each elements.
func Unzip4[T1, T2, T3, T4 any](o Optional[tuple.Tuple4[T1, T2, T3, T4]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}
}

// Unzip5 converts an optional of 5-tuple to optionals of each elements.
func Unzip5[T1, T2, T3, T4, T5 any](o Optional[tuple.Tuple5[T1, T2, T3, T4, T5]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4], Optional[T5]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}, Optional[T5]{valid: o.valid, value: o.value.V5}
}

// Unzip6 converts an optional of 6-tuple to optionals of each elements.
func Unzip6[T1, T2, T3, T4, T5, T6 any](o Optional[tuple.Tuple6[T1, T2, T3, T4, T5, T6]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4], Optional[T5], Optional[T6]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}, Optional[T5]{valid: o.valid, value: o.value.V5}, Optional[T6]{valid: o.valid, value: o.value.V6}
}

// Unzip7 converts an optional of 7-tuple to optionals of each elements.
func Unzip7[T1, T2, T3, T4, T5, T6, T7 any](o Optional[tuple.Tuple7[T1, T2, T3, T4, T5, T6, T7]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4], Optional[T5], Optional[T6], Optional[T7]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}, Optional[T5]{valid: o.valid, value: o.value.V5}, Optional[T6]{valid: o.valid, value: o.value.V6}, Optional[T7]{valid: o.valid, value: o.value.V7}
}

// Unzip8 converts an optional of 8-tuple to optionals of each elements.
func Unzip8[T1, T2, T3, T4, T5, T6, T7, T8 any](o Optional[tuple.Tuple8[T1, T2, T3, T4, T5, T6, T7, T8]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4], Optional[T5], Optional[T6], Optional[T7], Optional[T8]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}, Optional[T5]{valid: o.valid, value: o.value.V5}, Optional[T6]{valid: o.valid, value: o.value.V6}, Optional[T7]{valid: o.valid, value: o.value.V7}, Optional[T8]{valid: o.valid, value: o.value.V8}
}

// Unzip9 converts an optional of 9-tuple to optionals of each elements.
func Unzip9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any](o Optional[tuple.Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4], Optional[T5], Optional[T6], Optional[T7], Optional[T8], Optional[T9]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}, Optional[T5]{valid: o.valid, value: o.value.V5}, Optional[T6]{valid: o.valid, value: o.value.V6}, Optional[T7]{valid: o.valid, value: o.value.V7}, Optional[T8]{valid: o.valid, value: o.value.V8}, Optional[T9]{valid: o.valid, value: o.value.V9}
}

// Unzip10 converts an optional of 10-tuple to optionals of each elements.
func Unzip10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any](o Optional[tuple.Tuple10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4], Optional[T5], Optional[T6], Optional[T7], Optional[T8], Optional[T9], Optional[T10]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}, Optional[T5]{valid: o.valid, value: o.value.V5}, Optional[T6]{valid: o.valid, value: o.value.V6}, Optional[T7]{valid: o.valid, value: o.value.V7}, Optional[T8]{valid: o.valid, value: o.value.V8}, Optional[T9]{valid: o.valid, value: o.value.V9}, Optional[T10]{valid: o.valid, value: o.value.V10}
}

// Unzip11 converts an optional of 11-tuple to optionals of each elements.
func Unzip11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 any](o Optional[tuple.Tuple11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4], Optional[T5], Optional[T6], Optional[T7], Optional[T8], Optional[T9], Optional[T10], Optional[T11]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}, Optional[T5]{valid: o.valid, value: o.value.V5}, Optional[T6]{valid: o.valid, value: o.value.V6}, Optional[T7]{valid: o.valid, value: o.value.V7}, Optional[T8]{valid: o.valid, value: o.value.V8}, Optional[T9]{valid: o.valid, value: o.value.V9}, Optional[T10]{valid: o.valid, value: o.value.V10}, Optional[T11]{valid: o.valid, value: o.value.V11}
}

// Unzip12 converts an optional of 12-tuple to optionals of each elements.
func Unzip12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 any](o Optional[tuple.Tuple12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4], Optional[T5], Optional[T6], Optional[T7], Optional[T8], Optional[T9], Optional[T10], Optional[T11], Optional[T12]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}, Optional[T5]{valid: o.valid, value: o.value.V5}, Optional[T6]{valid: o.valid, value: o.value.V6}, Optional[T7]{valid: o.valid, value: o.value.V7}, Optional[T8]{valid: o.valid, value: o.value.V8}, Optional[T9]{valid: o.valid, value: o.value.V9}, Optional[T10]{valid: o.valid, value: o.value.V10}, Optional[T11]{valid: o.valid, value: o.value.V11}, Optional[T12]{valid: o.valid, value: o.value.V12}
}

// Unzip13 converts an optional of 13-tuple to optionals of each elements.
func Unzip13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 any](o Optional[tuple.Tuple13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4], Optional[T5], Optional[T6], Optional[T7], Optional[T8], Optional[T9], Optional[T10], Optional[T11], Optional[T12], Optional[T13]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}, Optional[T5]{valid: o.valid, value: o.value.V5}, Optional[T6]{valid: o.valid, value: o.value.V6}, Optional[T7]{valid: o.valid, value: o.value.V7}, Optional[T8]{valid: o.valid, value: o.value.V8}, Optional[T9]{valid: o.valid, value: o.value.V9}, Optional[T10]{valid: o.valid, value: o.value.V10}, Optional[T11]{valid: o.valid, value: o.value.V11}, Optional[T12]{valid: o.valid, value: o.value.V12}, Optional[T13]{valid: o.valid, value: o.value.V13}
}

// Unzip14 converts an optional of 14-tuple to optionals of each elements.
func Unzip14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 any](o Optional[tuple.Tuple14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4], Optional[T5], Optional[T6], Optional[T7], Optional[T8], Optional[T9], Optional[T10], Optional[T11], Optional[T12], Optional[T13], Optional[T14]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}, Optional[T5]{valid: o.valid, value: o.value.V5}, Optional[T6]{valid: o.valid, value: o.value.V6}, Optional[T7]{valid: o.valid, value: o.value.V7}, Optional[T8]{valid: o.valid, value: o.value.V8}, Optional[T9]{valid: o.valid, value: o.value.V9}, Optional[T10]{valid: o.valid, value: o.value.V10}, Optional[T11]{valid: o.valid, value: o.value.V11}, Optional[T12]{valid: o.valid, value: o.value.V12}, Optional[T13]{valid: o.valid, value: o.value.V13}, Optional[T14]{valid: o.valid, value: o.value.V14}
}

// Unzip15 converts an optional of 15-tuple to optionals of each elements.
func Unzip15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 any](o Optional[tuple.Tuple15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4], Optional[T5], Optional[T6], Optional[T7], Optional[T8], Optional[T9], Optional[T10], Optional[T11], Optional[T12], Optional[T13], Optional[T14], Optional[T15]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}, Optional[T5]{valid: o.valid, value: o.value.V5}, Optional[T6]{valid: o.valid, value: o.value.V6}, Optional[T7]{valid: o.valid, value: o.value.V7}, Optional[T8]{valid: o.valid, value: o.value.V8}, Optional[T9]{valid: o.valid, value: o.value.V9}, Optional[T10]{valid: o.valid, value: o.value.V10}, Optional[T11]{valid: o.valid, value: o.value.V11}, Optional[T12]{valid: o.valid, value: o.value.V12}, Optional[T13]{valid: o.valid, value: o.value.V13}, Optional[T14]{valid: o.valid, value: o.value.V14}, Optional[T15]{valid: o.valid, value: o.value.V15}
}

// Unzip16 converts an optional of 16-tuple to optionals of each elements.
func Unzip16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 any](o Optional[tuple.Tuple16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]]) (Optional[T1], Optional[T2], Optional[T3], Optional[T4], Optional[T5], Optional[T6], Optional[T7], Optional[T8], Optional[T9], Optional[T10], Optional[T11], Optional[T12], Optional[T13], Optional[T14], Optional[T15], Optional[T16]) {
	return Optional[T1]{valid: o.valid, value: o.value.V1}, Optional[T2]{valid: o.valid, value: o.value.V2}, Optional[T3]{valid: o.valid, value: o.value.V3}, Optional[T4]{valid: o.valid, value: o.value.V4}, Optional[T5]{valid: o.valid, value: o.value.V5}, Optional[T6]{valid: o.valid, value: o.value.V6}, Optional[T7]{valid: o.valid, value: o.value.V7}, Optional[T8]{valid: o.valid, value: o.value.V8}, Optional[T9]{valid: o.valid, value: o.value.V9}, Optional[T10]{valid: o.valid, value: o.value.V10}, Optional[T11]{valid: o.valid, value: o.value.V11}, Optional[T12]{valid: o.valid, value: o.value.V12}, Optional[T13]{valid: o.valid, value: o.value.V13}, Optional[T14]{valid: o.valid, value: o.value.V14}, Optional[T15]{valid: o.valid, value: o.value.V15}, Optional[T16]{valid: o.valid, value: o.value.V16}
}
